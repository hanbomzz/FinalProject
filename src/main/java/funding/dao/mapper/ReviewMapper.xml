<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="funding.dao.face.ReviewDao">

	<resultMap type="funding.dto.Review" id="Review">
		<id column="review_no" property="reviewNo"/>
		<result column="review_title" property="reviewTitle"/>
		<result column="review_content" property="reviewContent"/>
		<result column="writer_id" property="writerId"/>
		<result column="writer_nick" property="writerNick"/>
		<result column="write_date" property="writeDate"/>
	</resultMap> 

	<select id="selectList" resultMap="Review" parameterType="funding.util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, R.* FROM (
				SELECT
					review_no, review_title, review_content
					, writer_id, writer_nick, hit, write_date
				FROM review
				WHERE 1=1
       			 <choose>
       			 <when test="select != null and select.equals('writerNick')">
       			 	AND writer_nick LIKE '%'|| #{search} ||'%'
       			 </when>
       			 <when test="select != null and select.equals('reviewTitle')">
       			 	AND review_title LIKE '%'|| #{search} ||'%'
       			 </when>
       			 <when test="select != null and select.equals('reviewContent')">
       			 	AND review_content LIKE '%'|| #{search} ||'%'
       			 </when>
       			 </choose>
 
				ORDER BY review_no DESC
			) R
		) Review
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>

	<select id="selectCntAll" resultType="int" parameterType="funding.util.Paging">
		SELECT count(*) FROM review
			WHERE 1=1
       			 <choose>
       			 <when test="select != null and select.equals('writerNick')">
       			 	AND writer_nick LIKE '%'|| #{search} ||'%'
       			 </when>
       			 <when test="select != null and select.equals('reviewTitle')">
       			 	AND review_title LIKE '%'|| #{search} ||'%'
       			 </when>
       			 <when test="select != null and select.equals('reviewContent')">
       			 	AND review_content LIKE '%'|| #{search} ||'%'
       			 </when>
       			 </choose> 
	</select>

	<update id="hit" parameterType="funding.dto.Review">
		UPDATE review
		SET hit = hit + 1
		WHERE review_no = #{reviewNo}
	</update>
	
	<select id="select" resultMap="Review" parameterType="funding.dto.Review">
		SELECT
			review_no, review_title, review_content
			, writer_id, writer_nick, hit, write_date
		FROM review
		WHERE review_no = #{reviewNo}
	</select>
	
	<insert id="insertReview" parameterType="funding.dto.Review">
		<selectKey order="BEFORE" resultType="int" keyProperty="reviewNo">
			SELECT review_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO review ( review_no, review_title, review_content, writer_id, writer_nick )
		VALUES ( #{reviewNo}, #{reviewTitle}, #{reviewContent}, #{writerId}, #{writerNick} )
	</insert>
	
	<insert id="insertFile" parameterType="funding.dto.reviewFile">
		INSERT INTO reviewFile ( review_fileno, review_no, origin_name, stored_name )
		VALUES ( reviewfile_seq.nextval, #{reviewNo}, #{originName}, #{storedName} )
	</insert>

	<select id="selectReviewFileByReviewNo" resultType="funding.dto.ReviewFile" parameterType="funding.dto.Review">
		SELECT
			review_fileno fileNo
			, review_no reviewNo
			, origin_name originName
			, stored_name storedName
		FROM reviewFile
		WHERE review_no = #{reviewNo}
	</select>
	
	<select id="selectReviewFileByFileNo" resultType="funding.dto.ReviewFile" parameterType="funding.dto.ReviewFile">
		SELECT
			review_fileno fileNo
			, review_no reviewNo
			, origin_name originName
			, stored_name storedName
		FROM reviewFile
		WHERE review_fileno = #{reviewFileNo}
	</select>
	
	<update id="update" parameterType="funding.dto.Review">
		UPDATE review
		SET review_title = #{reviewTitle}
			, review_content = #{reviewContent}
		WHERE review_no = #{reviewNo}
	</update>
	
	<delete id="deleteFile" parameterType="funding.dto.Review">
		DELETE reviewFile
		WHERE review_no = #{reviewNo}
	</delete>

	<delete id="delete" parameterType="funding.dto.Review">
		DELETE review
		WHERE review_no = #{reviewNo}
	</delete>
	
</mapper>